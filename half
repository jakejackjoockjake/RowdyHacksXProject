import React, { useState } from 'react';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import { View, Text, FlatList, TouchableOpacity, StyleSheet, ScrollView, Image, Button } from 'react-native';
import { Card, Title, Paragraph, Chip } from 'react-native-paper';
import CalendarEvents from 'react-native-calendar-events';
import MapView,{Marker} from 'react-native-maps';

const Stack = createStackNavigator();

const events = [
  { id: '1', title: 'Tech Meetup', type: 'tech', date: 'Nov 1', location: 'Community Hall', description: 'Meet tech enthusiasts from around the city.', image: 'techmeetup.jpg', latitude: 37.78825, longitude: -122.4324 },
  { id: '2', title: 'Food Fest', type: 'food', date: 'Nov 5', location: 'Central Park', description: 'Taste foods from around the world.', image: 'assets/food-fest.jpg', latitude: 37.78925, longitude: -122.4324 },
  { id: '3', title: 'Music Concert', type: 'music', date: 'Nov 12', location: 'Open Arena', description: 'Live music concert featuring popular bands.', image: 'https://example.com/music-concert.jpg', latitude: 37.79025, longitude: -122.4324 },
  // Add more events as needed
];

function HomeScreen({ navigation }) {
  const [selectedCategory, setSelectedCategory] = useState('all');

  const filteredEvents = selectedCategory === 'all' ? events : events.filter(event => event.type === selectedCategory);

  return (
    <ScrollView style={styles.container}>
      <View style={styles.filterContainer}>
        {['all', 'tech', 'food', 'music'].map((category) => (
          <Chip
            key={category}
            style={styles.chip}
            selected={selectedCategory === category}
            onPress={() => setSelectedCategory(category)}
          >
            {category}
          </Chip>
        ))}
      </View>
      <FlatList
        data={filteredEvents}
        keyExtractor={(item) => item.id}
        renderItem={({ item }) => (
          <TouchableOpacity onPress={() => navigation.navigate('EventDetails', { event: item })}>
            <Card style={styles.card}>
              <Card.Cover source={{ uri: item.image }} />
              <Card.Content>
                <Title>{item.title}</Title>
                <Paragraph>{item.date} - {item.location}</Paragraph>
              </Card.Content>
            </Card>
          </TouchableOpacity>
        )}
      />
    </ScrollView>
  );
}

function EventDetailsScreen({ route }) {
  const { event } = route.params;

  const addToCalendar = () => {
    CalendarEvents.requestPermissions().then(() => {
      CalendarEvents.saveEvent(event.title, {
        startDate: '2024-11-01T10:00:00.000Z',
        endDate: '2024-11-01T12:00:00.000Z',
        location: event.location,
        notes: event.description,
      })
        .then(() => alert('Event added to calendar!'))
        .catch(err => console.log(err));
    });
  };

  return (
    <ScrollView style={styles.container}>
      <Image source={{ uri: event.image }} style={styles.image} />
      <Text style={styles.eventTitle}>{event.title}</Text>
      <Text style={styles.info}>{event.date} - {event.location}</Text>
      <Text style={styles.description}>{event.description}</Text>
      <Button title="Add to Calendar" onPress={addToCalendar} />
      <MapView
  style={{ flex: 1 }}
  initialRegion={{
    latitude: 37.78825,
    longitude: -122.4324,
    latitudeDelta: 0.0922,
    longitudeDelta: 0.0421,
  }}
/>
      <MapView
  style={styles.map}
  initialRegion={{
    latitude: event.latitude,
    longitude: event.longitude,
    latitudeDelta: 0.0922,
    longitudeDelta: 0.0421,
  }}
>
  <Marker
    coordinate={{ latitude: event.latitude, longitude: event.longitude }}
    title={event.title}
    description={event.location}
  />
</MapView>
    </ScrollView>
  );
}

export default function App() {
  return (
    <NavigationContainer>
      <Stack.Navigator>
        <Stack.Screen name="Home" component={HomeScreen} />
        <Stack.Screen name="EventDetails" component={EventDetailsScreen} options={{ title: 'Event Details' }} />
      </Stack.Navigator>
    </NavigationContainer>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 16,
    backgroundColor: '#f5f5f5',
  },
  filterContainer: {
    flexDirection: 'row',
    marginBottom: 16,
    flexWrap: 'wrap',
  },
  chip: {
    marginRight: 8,
    marginBottom: 8,
  },
  card: {
    marginVertical: 8,
    borderRadius: 8,
    overflow: 'hidden',
  },
  image: {
    width: '100%',
    height: 200,
    borderRadius: 8,
    marginBottom: 16,
  },
  eventTitle: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 8,
  },
  info: {
    fontSize: 16,
    color: '#555',
    marginBottom: 8,
  },
  description: {
    fontSize: 16,
    marginBottom: 16,
  },
  map: {
    width: '100%',
    height: 200,
    marginTop: 16,
  },
});
